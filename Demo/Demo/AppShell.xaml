<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="Demo.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ui="clr-namespace:Demo.UI"
    Title="Demo">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style
                x:Key="BaseStyle"
                TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="White" />
            </Style>
            <Style
                BasedOn="{StaticResource BaseStyle}"
                TargetType="TabBar" />
            <Style
                BasedOn="{StaticResource BaseStyle}"
                TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
                https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style
                Class="FlyoutItemLabelStyle"
                TargetType="Label">
                <Setter Property="TextColor" Value="White" />
            </Style>
            <Style
                ApplyToDerivedTypes="True"
                Class="FlyoutItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style
                ApplyToDerivedTypes="True"
                Class="MenuItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <FlyoutItem
        Title="SnailPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:SnailPage}"
            Route="SnailPage" />
    </FlyoutItem>


    <FlyoutItem
        Title="ZipTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:ZipTestPage}"
            Route="ZipTestPage" />
    </FlyoutItem>

    <FlyoutItem
        Title="SvgTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:SvgTestPage}"
            Route="SvgTestPage" />
    </FlyoutItem>
    <FlyoutItem
        Title="AliyunOSSTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:AliyunOSSTestPage}"
            Route="AliyunOSSTestPage" />
    </FlyoutItem>


    <FlyoutItem
        Title="SkiaTouchTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:SkiaTouchTestPage}"
            Route="SkiaTouchTestPage" />

    </FlyoutItem>
    <FlyoutItem
        Title="TwoWayBindingTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:TwoWayBindingTestPage}"
            Route="TwoWayBindingTestPage" />
    </FlyoutItem>


    <FlyoutItem
        Title="SkiaDefaultTouchPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:SkiaDefaultTouchPage}"
            Route="SkiaDefaultTouchPage" />
    </FlyoutItem>



    <FlyoutItem
        Title="XctTouchTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:XctTouchTestPage}"
            Route="XctTouchTestPage" />
    </FlyoutItem>


    <FlyoutItem
        Title="BubblePage2"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:BubblePage2}"
            Route="BubblePage2" />
    </FlyoutItem>

    <FlyoutItem
        Title="BubblePage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:BubblePage}"
            Route="BubblePage" />
    </FlyoutItem>



    <FlyoutItem
        Title="TimeEditorTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:TimeEditorTestPage}"
            Route="TimeEditorTestPage" />
    </FlyoutItem>

    <FlyoutItem
        Title="RepoTestPage"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:RepoTestPage}"
            Route="RepoTestPage" />
    </FlyoutItem>

    <FlyoutItem
        Title="Avatar"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:AvatarPage}"
            Route="AvatarPage" />
    </FlyoutItem>




    <FlyoutItem
        Title="Image"
        Icon="icon_about.png">
        <ShellContent
            ContentTemplate="{DataTemplate ui:ImageTestPage}"
            Route="ImageTestPage" />
    </FlyoutItem>


    <!--  When the Flyout is visible this will be a menu item you can tie a click behavior to  -->

</Shell>
